{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Mappings": {
    "RegionMap": {
      "us-east-1": {
        "S3Bucket": "leo-cli-publishbucket-qzoiwmdgdtjy"
      }
    }
  },
  "Metadata": {},
  "Resources": {
    "RestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "This is a sample BOT Description",
        "Name": {
          "Fn::Sub": "${AWS::StackName}-auth"
        },
        "Body": {
          "swagger": "2.0",
          "info": {
            "version": "1.1.0",
            "title": "auth"
          },
          "basePath": "/",
          "schemes": [
            "https"
          ],
          "paths": {
            "/api/authorize": {
              "put": {
                "produces": [
                  "application/json"
                ],
                "security": [
                  {
                    "sigv4": []
                  }
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    },
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "type": "string"
                      }
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Authorize.Arn}/invocations"
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
                }
              }
            }
          },
          "securityDefinitions": {
            "sigv4": {
              "type": "apiKey",
              "name": "Authorization",
              "in": "header",
              "x-amazon-apigateway-authtype": "awsSigv4"
            }
          },
          "definitions": {
            "Empty": {
              "type": "object"
            }
          }
        }
      }
    },
    "ApiRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ],
                "AWS": {
                  "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:root"
                }
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Policies": [
          {
            "PolicyName": "BasicPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:AddPermission"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${AWS::StackName}-*"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "AuthInstall": {
      "Type": "Custom::Install",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LeoAuthInstall",
            "Arn"
          ]
        },
        "Version": "1.0.2"
      },
      "DependsOn": [
        "LeoAuthInstall",
        "LeoAuthPolicy",
        "LeoAuthIdentity",
        "LeoAuthUser",
        "LeoAuth"
      ]
    },
    "LeoAuth": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "identity",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "identity",
            "KeyType": "HASH"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "100",
          "WriteCapacityUnits": "10"
        }
      }
    },
    "LeoAuthUser": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "identity_id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "identity_id",
            "KeyType": "HASH"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "100",
          "WriteCapacityUnits": "10"
        }
      }
    },
    "LeoAuthPolicy": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "name",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "name",
            "KeyType": "HASH"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "3",
          "WriteCapacityUnits": "3"
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_IMAGE"
        }
      }
    },
    "LeoAuthIdentity": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "identity",
            "AttributeType": "S"
          },
          {
            "AttributeName": "policy",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "identity",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "policy",
            "KeyType": "RANGE"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "5",
          "WriteCapacityUnits": "5"
        },
        "StreamSpecification": {
          "StreamViewType": "KEYS_ONLY"
        },
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "policy-identity-id",
            "KeySchema": [
              {
                "AttributeName": "policy",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "identity",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "KEYS_ONLY"
            },
            "BillingMode": "PAY_PER_REQUEST",
            "ProvisionedThroughput": {
              "ReadCapacityUnits": "5",
              "WriteCapacityUnits": "5"
            }
          }
        ]
      }
    },
    "LeoAuthPolicyEventSource": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "BatchSize": 1,
        "Enabled": true,
        "StartingPosition": "TRIM_HORIZON",
        "EventSourceArn": {
          "Fn::GetAtt": [
            "LeoAuthPolicy",
            "StreamArn"
          ]
        },
        "FunctionName": {
          "Ref": "LeoAuthWatch"
        }
      },
      "DependsOn": [
        "LeoAuthPolicy"
      ]
    },
    "LeoAuthIdentityEventSource": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "BatchSize": 1,
        "Enabled": true,
        "StartingPosition": "TRIM_HORIZON",
        "EventSourceArn": {
          "Fn::GetAtt": [
            "LeoAuthIdentity",
            "StreamArn"
          ]
        },
        "FunctionName": {
          "Ref": "LeoAuthWatch"
        }
      },
      "DependsOn": [
        "LeoAuthIdentity"
      ]
    },
    "LeoAuthManagedPolicy": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetItem"
              ],
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "LeoAuth",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "LeoAuthUser",
                    "Arn"
                  ]
                }
              ]
            }
          ]
        }
      }
    },
    "LeoAuthRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Policies": [
          {
            "PolicyName": "Leo_Auth_watch",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:BatchWriteItem",
                    "dynamodb:BatchGetItem",
                    "dynamodb:GetItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:GetRecords",
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:GetShardIterator",
                    "dynamodb:DescribeStream",
                    "dynamodb:ListStreams"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${AWS::StackName}-LeoAuth*"
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "Authorize": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::FindInMap": [
              "RegionMap",
              {
                "Ref": "AWS::Region"
              },
              "S3Bucket"
            ]
          },
          "S3Key": "auth/1.1.0/Authorize_1.0.0.zip"
        },
        "Description": "This is a sample ApiGateway Description",
        "Handler": "index.handler",
        "Environment": {
          "Variables": {
            "Resources": "{}",
            "NODE_ENV": {
              "Fn::Sub": "${Environment}"
            }
          }
        },
        "MemorySize": 128,
        "Runtime": "nodejs10.x",
        "Timeout": 3,
        "Role": {
          "Fn::Sub": "${ApiRole.Arn}"
        }
      }
    },
    "AuthorizeGatewayPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "Authorize"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*"
        }
      }
    },
    "LeoAuthWatch": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::FindInMap": [
              "RegionMap",
              {
                "Ref": "AWS::Region"
              },
              "S3Bucket"
            ]
          },
          "S3Key": "auth/1.1.0/LeoAuthWatch_1.0.0.zip"
        },
        "Description": "This is a sample BOT Description",
        "Handler": "index.handler",
        "Environment": {
          "Variables": {
            "Resources": {
              "Fn::Sub": "{\"Region\":\"${AWS::Region}\",\"LeoAuth\":\"${LeoAuth}\",\"LeoAuthUser\":\"${LeoAuthUser}\",\"LeoAuthPolicy\":\"${LeoAuthPolicy}\",\"LeoAuthIdentity\":\"${LeoAuthIdentity}\"}"
            },
            "NODE_ENV": {
              "Fn::Sub": "${Environment}"
            }
          }
        },
        "MemorySize": 128,
        "Runtime": "nodejs10.x",
        "Timeout": 3,
        "Role": {
          "Fn::Sub": "${LeoAuthRole.Arn}"
        }
      }
    },
    "LeoAuthInstall": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::FindInMap": [
              "RegionMap",
              {
                "Ref": "AWS::Region"
              },
              "S3Bucket"
            ]
          },
          "S3Key": "auth/1.1.0/LeoAuthInstall_1.0.0.zip"
        },
        "Description": "Installs Default policy",
        "Handler": "index.handler",
        "Environment": {
          "Variables": {
            "Resources": {
              "Fn::Sub": "{\"Region\":\"${AWS::Region}\",\"LeoAuth\":\"${LeoAuth}\",\"LeoAuthUser\":\"${LeoAuthUser}\",\"LeoAuthPolicy\":\"${LeoAuthPolicy}\",\"LeoAuthIdentity\":\"${LeoAuthIdentity}\"}"
            },
            "NODE_ENV": {
              "Fn::Sub": "${Environment}"
            }
          }
        },
        "MemorySize": 128,
        "Runtime": "nodejs10.x",
        "Timeout": 5,
        "Role": {
          "Fn::Sub": "${LeoAuthRole.Arn}"
        }
      }
    },    
    "ApiDeployment1601499152793": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi"
        },
        "StageName": "Release",
        "Description": "Version: 1.1.0"
      }
    }
  },
  "Parameters": {
    "Environment": {
      "Type": "String",
      "Default": "dev",
      "MinLength": 1,
      "Description": "Environment"
    }
  },
  "Conditions": {},
  "Outputs": {
    "Policy": {
      "Description": "Policy for Read/Write to the Bus",
      "Value": {
        "Ref": "LeoAuthManagedPolicy"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-Policy"
        }
      }
    },
    "LeoAuth": {
      "Description": "LeoAuth Table",
      "Value": {
        "Fn::Sub": "${LeoAuth}"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-LeoAuth"
        }
      }
    },
    "LeoAuthUser": {
      "Description": "LeoAuthUser Table",
      "Value": {
        "Fn::Sub": "${LeoAuthUser}"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-LeoAuthUser"
        }
      }
    },
    "LeoTemplate": {
      "Description": "Leo Template",
      "Value": "/auth/1.1.0/cloudformation-1601499159911.json"
    }
  }
}
